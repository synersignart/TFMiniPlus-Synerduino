#include <SoftwareSerial.h>   //header file of software serial port
SoftwareSerial Serial1(10, 9); //define software serial port name as Serial1 and define pin2 as RX & pin3 as TX
#include <Servo.h>. 
int dist;                     //actual distance measurements of LiDAR
int strength;                 //signal strength of LiDAR
int check;                    //save check value
int i;
int i2;
int uart[9];                   //save data measured by LiDAR
const int HEADER = 0x59;      //frame header of data package

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
int inputdistance = 120; // set Distance to trigger the PWM Aux Switch in cm (change this to adjust trigger distance)Stop
int inputdistance1 = 120; // set Distance to trigger the PWM Aux Switch in cm (change this to adjust trigger distance)Steer
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
boolean __ardublockDigitalRead(int pinNumber)
{
  pinMode(pinNumber, INPUT);
  return digitalRead(pinNumber);
}
int ardublockUltrasonicSensorCodeAutoGeneratedReturnCM(int trigPin, int echoPin) // Ultrasonic on Pin 4 both Trigger and ECO (PWM servo input) //See Trigger tab to adjust its distance
{
  long duration;
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  duration = duration / 59;
  if ((duration < 2) || (duration > 300)) return false;
  return duration;
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
Servo myServo;// Creates a servo object for controlling the LIDAR servo motor D5
Servo myServoA;// Creates a servo object for controlling the Output PWM D3
Servo myServoB;// Creates a servo object for controlling the output PWM D6
Servo myServoC;// Creates a servo object for controlling the Output PWM D7

void setup()
{
  Serial.begin(57600);         //set bit rate of serial port connecting Arduino with computer
  Serial1.begin(115200);      //set bit rate of serial port connecting LiDAR with Arduino

//-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
  myServo.attach(5); // Defines on which pin is the servo motor attached // Lidar Servo
  myServoA.attach(3); // Defines on which pin is the servo motor attached // PWM Output to flight controller
  myServoB.attach(6); // Defines on which pin is the servo motor attached
  myServoC.attach(7); // Defines on which pin is the servo motor attached
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
          //STOP//
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
  pinMode( 4 , OUTPUT); //Trigger input
  digitalWrite( 4 , LOW ); //Trigger input
 //-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
  digitalWrite(4 , __ardublockDigitalRead(  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 4 , 4 ))); // pwm input condition
 //-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
          //STEER//
 //--------------------------------------------------------------------------------------------------------------------------------------------------------------
  pinMode( 8 , OUTPUT); //Trigger input
  digitalWrite( 8 , LOW ); //Trigger input
 //-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
  digitalWrite(8 , __ardublockDigitalRead(  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ))); // pwm input condition
 //-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
}
 
 
void loop() {


    
     for(int i2=165;i2>15 ;i2--)  {

 //------------------------------------------------------------------------

 //if (( ( ( ( dist ) < ( inputdistance ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 4 , 4 ) ) ) > ( 100 ) ) ))
  //  {
    //  digitalWrite(13 , HIGH);  //Relay Pin condition
    //  myServoA.write( 60 );
    //  delay( 300 );
   // }
  //    else
  //  {
  //  digitalWrite(13 , LOW);  //Relay Pin condition
   // myServoA.write( 100 );     //Servo B (degrees) Stop 
  //  }     
 //------------------------------------------------------------------------    

  //------------------------------------------------------------------------

 if (( ( ( ( dist ) < ( inputdistance1 ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ) ) ) > ( 100 ) ) ))
    {
     digitalWrite(13 , HIGH);  //Relay Pin condition
     myServoB.write( 30 );
     delay( 100 );
    }
 if (( ( ( ( dist ) > ( inputdistance1 ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ) ) ) > ( 100 ) ) ))
    {
     digitalWrite(13 , HIGH);  //Relay Pin condition
     myServoB.write( 90 );
     delay( 5 );
    }     
 if (( ( ( ( dist ) < ( inputdistance1 ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ) ) ) < ( 100 ) ) ))
    {
     digitalWrite(13 , HIGH);  //Relay Pin condition
     myServoB.write( 90 );
     delay( 5 );
    }        
 //------------------------------------------------------------------------             
             
          Serial.print(i2);                 //output measure distance value of LiDAR
          Serial.print(",");
          Serial.print(dist);             //output signal strength value
          Serial.print(".");
          myServo.write(i2);         
          delay(5);
          AA();
          
          myServo.write(i2);            
     }
          
 
     for(int i2=15;i2<165;i2++)  {

 //------------------------------------------------------------------------
        //Lidar Steering//
 //------------------------------------------------------------------------

 if (( ( ( ( dist ) < ( inputdistance1 ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ) ) ) > ( 100 ) ) ))
    {
     digitalWrite(13 , HIGH);  //Relay Pin condition
     myServoB.write( 150 );
     delay( 100 );
    }
  if (( ( ( ( dist ) > ( inputdistance1 ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ) ) ) > ( 100 ) ) ))
    {
     digitalWrite(13 , HIGH);  //Relay Pin condition
     myServoB.write( 90 );
     delay( 5 );
    }       
  if (( ( ( ( dist ) < ( inputdistance1 ) ) && ( ( dist ) > ( 5 ) ) ) && ( ( ( 5 *  ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 8 , 8 ) ) ) < ( 100 ) ) ))
    {
     digitalWrite(13 , HIGH);  //Relay Pin condition
     myServoB.write( 90 );
     delay( 5 );
    }          
 //------------------------------------------------------------------------ 
 //------------------------------------------------------------------------  
          Serial.print(i2);                 //output measure distance value of LiDAR
          Serial.print(",");
          Serial.print(dist);             //output signal strength value
          Serial.print(".");
          myServo.write(i2);         
          delay(5);
          AA();
      
          myServo.write(i2);
          delay(5);                            
     }
}
