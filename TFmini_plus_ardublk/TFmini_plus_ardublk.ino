#include <Servo.h>

#include <SoftwareSerial.h>
 
SoftwareSerial Serial1(10,9);//        RX-10 ,TX-9  use Logic converter // TX-Green-3A RX-White-3B// 5A-D9 5B-D10

int dist; //actual distance measurements of LiDAR

int check;  //save check value

int i;

int uart[9];  //save data measured by LiDAR

const int HEADER=0x59;  //frame header of data package

boolean __ardublockDigitalRead(int pinNumber)
{
  pinMode(pinNumber, INPUT);
  return digitalRead(pinNumber);
}


int ardublockUltrasonicSensorCodeAutoGeneratedReturnCM(int trigPin, int echoPin) // Ultrasonic on Pin 4 both Trigger and ECO (PWM servo input) //See Trigger tab to adjust its distance
{
  long duration;
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  duration = duration / 59;
  if ((duration < 2) || (duration > 300)) return false;
  return duration;
}

Servo servo_pin_3;// PWM Output to flight controller
Servo servo_pin_5;// Lidar Servo
int _ABVAR_1_a;
int _ABVAR_2_a;
int _ABVAR_3_a;
int _ABVAR_4_a;
int _ABVAR_5_a;
int _ABVAR_6_a;
int _ABVAR_7_a;
int _ABVAR_8_a;
int _ABVAR_9_a;
int _ABVAR_10_a;
int _ABVAR_11_a;
int _ABVAR_12_a;

void setup()
{
  Serial.begin(115200); //set bit rate of serial port connecting Arduino with computer

  Serial1.begin(115200);  //set bit rate of serial port connecting LiDAR with Arduino

  pinMode( 4 , OUTPUT);
  digitalWrite( 4 , LOW );

  servo_pin_3.attach(3);
  servo_pin_5.attach(5);









  digitalWrite(4 , __ardublockDigitalRead(	ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 4 , 4 )));

}

void loop()
{
  servo_pin_3.write( 50 );
  servo_pin_5.write( 60 );
  delay( 200 );
  for (_ABVAR_1_a=1; _ABVAR_1_a<= ( 10 ); ++_ABVAR_1_a )
  {
    {
      AA();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 60 );
  delay( 200 );
  for (_ABVAR_2_a=1; _ABVAR_2_a<= ( 10 ); ++_ABVAR_2_a )
  {
    {
      AA();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 80 );
  delay( 200 );
  for (_ABVAR_3_a=1; _ABVAR_3_a<= ( 10 ); ++_ABVAR_3_a )
  {
    {
      BB();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 90 );
  delay( 200 );
  for (_ABVAR_4_a=1; _ABVAR_4_a<= ( 10 ); ++_ABVAR_4_a )
  {
    {
      BB();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 100 );
  delay( 200 );
  for (_ABVAR_5_a=1; _ABVAR_5_a<= ( 10 ); ++_ABVAR_5_a )
  {
    {
      BB();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 110 );
  delay( 200 );
  for (_ABVAR_6_a=1; _ABVAR_6_a<= ( 10 ); ++_ABVAR_6_a )
  {
    {
      CC();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 130 );
  delay( 200 );
  for (_ABVAR_7_a=1; _ABVAR_7_a<= ( 10 ); ++_ABVAR_7_a )
  {
    {
      CC();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 110 );
  delay( 200 );
  for (_ABVAR_8_a=1; _ABVAR_8_a<= ( 10 ); ++_ABVAR_8_a )
  {
    {
      CC();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 100 );
  delay( 200 );
  for (_ABVAR_9_a=1; _ABVAR_9_a<= ( 10 ); ++_ABVAR_9_a )
  {
    {
      BB();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 90 );
  delay( 200 );
  for (_ABVAR_10_a=1; _ABVAR_10_a<= ( 10 ); ++_ABVAR_10_a )
  {
    {
      BB();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 80 );
  delay( 200 );
  for (_ABVAR_11_a=1; _ABVAR_11_a<= ( 10 ); ++_ABVAR_11_a )
  {
    {
      BB();
    }
  }
  {
    trigger();
  }
  servo_pin_5.write( 60 );
  delay( 200 );
  for (_ABVAR_12_a=1; _ABVAR_12_a<= ( 10 ); ++_ABVAR_12_a )
  {
    {
      AA();
    }
  }
  {
    trigger();
  }
}
